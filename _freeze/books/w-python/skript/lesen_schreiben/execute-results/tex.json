{
  "hash": "f13a365718d72033ea7e2c8d8304fae7",
  "result": {
    "engine": "jupyter",
    "markdown": "# Arbeiten mit Dateien\n\nProgramme arbeiten oft nicht nur mit Benutzereingaben, sondern auch mit **Textdateien** ‚Äì zum Beispiel um Daten zu speichern oder zu laden.\n\nPython bietet einfache Funktionen, um:\n- Dateien **zu √∂ffnen**,\n- ihren **Inhalt zu lesen** oder **hineinzuschreiben**,\n- und die Datei **wieder zu schlie√üen**.\n\n## Lernziele dieses Kapitels\n\nAm Ende dieses Kapitels k√∂nnen Sie:\n- Dateien mit `open()` √∂ffnen,\n- Inhalte aus Textdateien einlesen,\n- Texte in Dateien schreiben,\n- mit `with`-Bl√∂cken sicher und einfach arbeiten.\n\n## Eine Datei einlesen\n\n::: {.cell execution_count=1}\n``` {.python .cell-code}\n# Beispiel: Datei lesen\nwith open(\"01-daten/beispiel.txt\", \"r\") as datei:\n    inhalt = datei.read()\n    print(inhalt)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nDies ist eine Beispieldatei.\nSie enth√§lt mehrere Zeilen Text.\nZum √úben des Dateilesens in Python.\n\n```\n:::\n:::\n\n\n- `\"r\"` steht f√ºr **read** (lesen).\n- `with` sorgt daf√ºr, dass die Datei nach dem Lesen automatisch geschlossen wird.\n- `read()` liest den **gesamten Inhalt** der Datei als String.\n\n## Zeilenweise lesen\n\n::: {.cell execution_count=2}\n``` {.python .cell-code}\nwith open(\"01-daten/beispiel.txt\", \"r\") as datei:\n    for zeile in datei:\n        print(\"Zeile:\", zeile.strip())\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nZeile: Dies ist eine Beispieldatei.\nZeile: Sie enth√§lt mehrere Zeilen Text.\nZeile: Zum √úben des Dateilesens in Python.\n```\n:::\n:::\n\n\nüí° `.strip()` entfernt Leerzeichen und Zeilenumbr√ºche am Anfang und Ende.\n\n::: {.callout-tip collapse=\"true\"}\n## Aufgabe: Datei lesen\n\nAngenommen, es gibt eine Datei `gruesse.txt` mit folgendem Inhalt:\n\n```\nHallo Anna\nGuten Morgen Ben\nWillkommen Carla\n```\n\nSchreiben Sie ein Programm, das jede Zeile einzeln einliest und mit `print(...)` wiedergibt.\n\n::: {.callout-caution icon=\"false\" collapse=\"true\"}\n## L√∂sung\n\n::: {.cell execution_count=3}\n``` {.python .cell-code}\nwith open(\"01-daten/gruesse.txt\", \"r\") as f:\n    for zeile in f:\n        print(zeile.strip())\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nHallo Anna\nGuten Morgen Ben\nWillkommen Carla\n```\n:::\n:::\n\n\n:::\n:::\n\n## In eine Datei schreiben\n\n::: {.cell execution_count=4}\n``` {.python .cell-code}\nwith open(\"ausgabe.txt\", \"w\") as datei:\n    datei.write(\"Das ist eine neue Zeile.\\n\")\n    datei.write(\"Und noch eine.\")\n```\n:::\n\n\n- `\"w\"` steht f√ºr **write** (schreiben).\n- Achtung: Eine vorhandene Datei wird **√ºberschrieben**!\n\n## Zeilenweise schreiben mit Schleife\n\n::: {.cell execution_count=5}\n``` {.python .cell-code}\ndaten = [\"Apfel\", \"Banane\", \"Kirsche\"]\n\nwith open(\"obst.txt\", \"w\") as f:\n    for eintrag in daten:\n        f.write(eintrag + \"\\n\")\n```\n:::\n\n\nüí° Jede Zeile endet mit `\\n` f√ºr einen Zeilenumbruch.\n\n::: {.callout-tip collapse=\"true\"}\n## Aufgabe: Liste in Datei schreiben\n\nGegeben ist eine Liste von St√§dten:\n\n```python\nstaedte = [\"Berlin\", \"Hamburg\", \"M√ºnchen\"]\n```\n\n- Schreiben Sie ein Programm, das jede Stadt in eine neue Zeile einer Datei `staedte.txt` schreibt.\n\n::: {.callout-caution icon=\"false\" collapse=\"true\"}\n## L√∂sung\n\n::: {.cell execution_count=6}\n``` {.python .cell-code}\nstaedte = [\"Berlin\", \"Hamburg\", \"M√ºnchen\"]\n\nwith open(\"staedte.txt\", \"w\") as f:\n    for stadt in staedte:\n        f.write(stadt + \"\\n\")\n```\n:::\n\n\n:::\n:::\n\n",
    "supporting": [
      "lesen_schreiben_files/figure-pdf"
    ],
    "filters": []
  }
}