{
  "hash": "2d164d831e30aaa2b605729a2f280d41",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"Arbeiten mit Daten – CSV-Dateien mit NumPy und Matplotlib\"\nformat:\n  html:\n    code-fold: false\n    code-overflow: wrap\njupyter: python3\n---\n\n\n\n\n\n\n# CSV-Dateien einlesen, bereinigen, analysieren, interpolieren und visualisieren mit NumPy und Matplotlib\n\n```{.callout-note}\n## Lernziele\nNach dieser Einheit kannst du:\n\n- CSV-Dateien mit NumPy einlesen\n- fehlende oder fehlerhafte Werte identifizieren und bereinigen\n- einfache statistische Auswertungen durchführen\n- Daten mit Matplotlib visualisieren\n- Interpolationstechniken anwenden\n- reale Messdaten analysieren\n- Trends durch Glättung erkennen\n```\n\n## CSV-Dateien einlesen\n\n```python\nimport numpy as np\nimport matplotlib.pyplot as plt\n\ndata = np.genfromtxt(\"beispiel.csv\", delimiter=\",\", skip_header=1)\nprint(data)\n```\n\n## Fehlende Werte behandeln\n\n```python\nprint(np.isnan(data).sum(axis=0))\n\nfor i in range(data.shape[1]):\n    mean = np.nanmean(data[:, i])\n    data[:, i] = np.where(np.isnan(data[:, i]), mean, data[:, i])\n```\n\n## Einfache Statistik\n\n```python\nprint(\"Mittelwerte:\", np.mean(data, axis=0))\nprint(\"Standardabweichung:\", np.std(data, axis=0))\nprint(\"Minimum:\", np.min(data, axis=0))\nprint(\"Maximum:\", np.max(data, axis=0))\n```\n\n## Visualisierung\n\n```python\nlabels = [\"Temperatur (°C)\", \"Luftfeuchtigkeit (%)\", \"CO₂ (ppm)\"]\n\nfor i in range(data.shape[1]):\n    plt.plot(data[:, i], label=labels[i])\nplt.legend()\nplt.title(\"Messwerte\")\nplt.grid(True)\nplt.show()\n```\n\n## Interpolation\n\n```python\nx = np.array([0, 1, 2, 3, 4, 5])\ny = np.array([0, 3, 4, 5, 7, 8])\nx_interp = np.linspace(x.min(), x.max(), 100)\ny_interp = np.interp(x_interp, x, y)\n\nplt.plot(x, y, 'bo', label='Originaldaten')\nplt.plot(x_interp, y_interp, 'r-', label='Interpoliert')\nplt.legend()\nplt.grid(True)\nplt.show()\n```\n\n## Ballonfahrtanalyse\n\n```python\nballon = np.genfromtxt(\"messdaten_ballonfahrt.txt\", delimiter=\",\", skip_header=1)\nzeit = ballon[:, 0]\nhoehe = ballon[:, 1]\nplt.plot(zeit, hoehe)\nplt.title(\"Ballonfahrt – Höhe über Zeit\")\nplt.xlabel(\"Zeit (s)\")\nplt.ylabel(\"Höhe (m)\")\nplt.grid(True)\nplt.show()\n\ngeschwindigkeit = np.gradient(hoehe, zeit)\nplt.plot(zeit, geschwindigkeit, color=\"orange\")\nplt.title(\"Ballonfahrt – Geschwindigkeit\")\nplt.xlabel(\"Zeit (s)\")\nplt.ylabel(\"v (m/s)\")\nplt.grid(True)\nplt.show()\n```\n\n## Trendglättung (Rauschen filtern)\n\n```python\nrauschen = np.genfromtxt(\"trenddaten_mit_rauschen.csv\", delimiter=\",\", skip_header=1)\nx = rauschen[:, 0]\ny = rauschen[:, 1]\n\nwindow = 5\nweights = np.ones(window) / window\ny_smooth = np.convolve(y, weights, mode='valid')\n\nplt.plot(x, y, label=\"Originaldaten\", alpha=0.5)\nplt.plot(x[(window-1)//2:-(window//2)], y_smooth, label=\"Geglättet\", color='red')\nplt.title(\"Trendglättung\")\nplt.legend()\nplt.grid(True)\nplt.show()\n```\n\n## Bauingenieurwesen: Balkenverformung\n\n```python\nbalken = np.genfromtxt(\"balken_durchbiegung.csv\", delimiter=\",\", skip_header=1)\nx = balken[:, 0]\ny = balken[:, 1]\n\nwindow = 7\nweights = np.ones(window) / window\ny_smooth = np.convolve(y, weights, mode='valid')\n\nplt.plot(x, y, label=\"Messwerte\", alpha=0.5)\nplt.plot(x[(window-1)//2:-(window//2)], y_smooth, label=\"Geglättet\", color='red')\nplt.title(\"Durchbiegung eines Balkens\")\nplt.xlabel(\"Position (m)\")\nplt.ylabel(\"Durchbiegung (mm)\")\nplt.legend()\nplt.grid(True)\nplt.show()\n```\n\n",
    "supporting": [
      "csv_numpy_matplotlib_files/figure-pdf"
    ],
    "filters": []
  }
}