{
  "hash": "b203cc6eb8460904050eaa627ce90440",
  "result": {
    "engine": "jupyter",
    "markdown": "# Fitting\n\n\n\nBeim Fitting wird eine Modellfunktion gesucht, weche die Messdaten nicht unbedingt exakt abbildet. Wird ein Polynom verwendet, so hat es eine Grad, welcher deutlich kleiner ist, als die Anzahl der Messpunkte. Lineare Regression ist ein Beispiel für ein Fitting durch ein Polynom mit dem Grad Eins.\n\nZum Fitten durch ein Polynom kann die Funktion `np.polyfit` verwendet werden, genauso wie bei der Polynominterpolation. Diesmal jedoch mit einem kleineren Polynomgrad.\n\nIm folgenden Beispiel werden zunächst Modelldaten generiert und dann mit entsprechenden Polynomen gefittet.\n\n::: {#c0577716 .cell execution_count=2}\n``` {.python .cell-code}\nxmin = 0\nxmax = 5\nx = np.linspace(xmin, xmax, 100)\n\nni = 25\n\n# x-Werte mit leichtem Rauschen\nxi = np.linspace(xmin, xmax, ni) + 0.2*(2 * np.random.random(ni) -1)\n\n# y(x) = 2x+0.5 mit leichtem Rauschen\nyi = 2*xi + 0.5 + 2*(2 * np.random.random(ni) -1)\n\nplt.scatter(xi, yi, color='C1')\nplt.grid()\n```\n\n::: {.cell-output .cell-output-display}\n![](fitting_files/figure-html/cell-3-output-1.png){width=569 height=411}\n:::\n:::\n\n\n::: {#6fdad113 .cell execution_count=3}\n``` {.python .cell-code}\nP1 = np.polyfit(xi, yi, 1)\n\nplt.scatter(xi, yi, color='C1', zorder=3, label='Messpunkte')\nplt.plot(x, np.polyval(P1, x), color='C0', label=\"Modellfunktion\")\nplt.grid()\nplt.legend()\n```\n\n::: {.cell-output .cell-output-display}\n![](fitting_files/figure-html/cell-4-output-1.png){width=569 height=411}\n:::\n:::\n\n\n::: {#1b623f1c .cell execution_count=4}\n``` {.python .cell-code}\n# x-Werte mit leichtem Rauschen\nxi = np.linspace(xmin, xmax, ni) + 0.2*(2 * np.random.random(ni) -1)\n\n# y(x) = 2x+0.5 mit leichtem Rauschen\nyi = (xi - 2)**2 -2*xi + 2.5 + 2*(2 * np.random.random(ni) -1)\n```\n:::\n\n\n::: {#9b9e51f3 .cell execution_count=5}\n``` {.python .cell-code}\nP1 = np.polyfit(xi, yi, 1)\nP2 = np.polyfit(xi, yi, 2)\n\nplt.scatter(xi, yi, color='C1', zorder=3, label='Messpunkte')\nplt.plot(x, np.polyval(P1, x), color='C0', label=\"Modellfunktion, Grad 1\")\nplt.plot(x, np.polyval(P2, x), color='C2', label=\"Modellfunktion, Grad 2\")\nplt.grid()\nplt.legend()\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](fitting_files/figure-html/cell-6-output-1.png){width=569 height=411}\n:::\n:::\n\n\n",
    "supporting": [
      "fitting_files"
    ],
    "filters": [],
    "includes": {}
  }
}